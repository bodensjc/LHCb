#define Dp2KKpi_minPT_cxx
#include "Analyze.h"
#include <TH2.h>
#include <TStyle.h>
#include <vector>

//**************** Definition Section **************
TH1 * bsubhist = NULL;
TH1 * sighist = NULL;
TH1 * usbhist = NULL;
TH1 * lsbhist = NULL;
TH1 * esthist = NULL;
auto c1 = new TCanvas("c1","c1",1600,1200);
auto legend = new TLegend(0.55,0.7,0.9,0.9);


void Dp2KKpi_minPT::Begin(TTree * /*tree*/)
{
   TString option = GetOption();

//************** Initialization Section ************

 sighist = new TH1D("sighist","D+ -> KKpi Signal Region min PT",100,0,2500);//goes up to about 4750 but cutting at 2500
 sighist->GetXaxis()->SetTitle("PT [MeV]");
 sighist->GetYaxis()->SetTitle("events per 25 MeV");
 sighist->SetLineColor(kBlue);
 sighist->SetStats(0);

 usbhist = new TH1D("usbhist", "Upper Side Band", 100, 0, 2500);
 lsbhist = new TH1D("lsbhist", "Lower Side Band", 100, 0, 2500);
 esthist = new TH1D("esthist","Estimated Signal Error Bar Graph",100,0,2500);
 esthist->SetLineColor(kRed);
 esthist->SetStats(0);

 bsubhist = new TH1D("bsubhist","Subtracted Error Bar Graph",100,0,2500);
 bsubhist->SetLineColor(kGreen);
 bsubhist->SetStats(0);



}

void Dp2KKpi_minPT::SlaveBegin(TTree * ) {}

Bool_t Dp2KKpi_minPT::Process(Long64_t entry)
{
  fReader.SetLocalEntry(entry);//do NOT delete this line, otherwise the program will crash

//*************** Loop Section ********************
  GetEntry(entry);
  //do the fancy stuff here



  vector<double> ptv{*Kminus_PT, *Kplus_PT, *Piplus_PT};//init vec of pts
  double_t ptmin = *min_element(ptv.begin(), ptv.end());//find min of ptv

  if (*Dplus_M > 1859 && *Dplus_M < 1879) {
    sighist->Fill(ptmin);//filling signal bars
  };

  if (*Dplus_M < 1839 && *Dplus_M > 1819) {
    lsbhist->Fill(ptmin);//filling lower side band bars
  };

  if (*Dplus_M < 1919 && *Dplus_M > 1899) {
    usbhist->Fill(ptmin);//filling upper side band bars
  };


  return kTRUE; //also need this line otherwise (error: control reaches end of non-void function)
}

void Dp2KKpi_minPT::SlaveTerminate() {}

void Dp2KKpi_minPT::Terminate()
{
 //**************** Wrap-up Section ****************

  esthist->Add(usbhist,lsbhist,0.5,0.5);//creating esthist by adding equal parts usb and lsb
  
  bsubhist->Add(sighist);
  bsubhist->Add(esthist,-1);//creating background bars by subbing est from sig

  sighist->Draw("e0");
  esthist->Draw("e0same");
  bsubhist->Draw("e0same");

 legend->SetHeader("Distributions","C"); // "c" centers header
   legend->AddEntry(sighist,"Observed min PT","l");
   legend->AddEntry(esthist,"Estimated min PT","l");
   legend->AddEntry(bsubhist,"Background Subtracted min PT","l");
  legend->Draw();

  c1->SaveAs("Dp2KKpi_minPT.png");

}
