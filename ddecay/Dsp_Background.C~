#define Dsp_Background_cxx
#include "Dsp_Background.h"
#include <TH2.h>
#include <TStyle.h>

//******************DEFINITION SECTION*********************
//~~~~~~~~~~~~~~~~~~~mass dsp~~~~~~~~~~~~~~~~~
//~~~~~~~~~mass Dp~~~~~~~~~~~
TH1 * mdspsig = NULL;
TH1 * mdspisb = NULL;
TH1 * mdsposb = NULL;
//~~~~~~~~~~~~~~~ phi 1020 ~~~~~~~~~~~~~~~~~~~~~
TH1 * phisighist = NULL;
TH1 * phiosbhist = NULL;
TH1 * phisubhist = NULL;
TH1 * phiratio = NULL;




void Dsp_Background::Begin(TTree * /*tree*/)
{

   TString option = GetOption();

 //*****************INITIALIZATION***************
//~~~~~~~~~~~~mass dsp~~~~~~~~~~~~~
   mdspsig = new TH1D("Signal Region","m(Ds+) with Background Regions",100,1919,2019);
 mdspsig->GetXaxis()->SetTitle("Mass [MeV/c^{2}]");
 mdspsig->GetYaxis()->SetTitle("events per MeV");
 //mdpsig->SetStats(0);
 mdspsig->SetFillColor(kBlue);
mdspisb = new TH1D("mdspisb","m(Ds+) inner side band",100,1919,2019);
 mdspisb->SetStats(0);
 mdspisb->SetFillColor(kYellow);
mdsposb = new TH1D("mdsposb","m(Ds+) outer side band",100,1919,2019);
 mdsposb->SetStats(0);
 mdsposb->SetFillColor(kRed);

 //~~~~~~~~~~~~~~~~~ phi 1020 ~~~~~~~~~~~~~~~~~~~~~
   phisighist = new TH1D("phisighist", "D^{+}_{s} #rightarrow K^{+}K^{-}#pi^{+}  cut on  #phi(1020)", 100, 1, 1.1);
   phisighist->GetXaxis()->SetTitle("m^{2}(K^{+}K^{-}) [GeV^{2}/c^{4}]");
   phisighist->GetYaxis()->SetTitle("Events per GeV^{2}/c^{4}");
   phisighist->SetStats(0);
   phisighist->SetLineColor(kBlue);

   phiosbhist = new TH1D("phiosbhist", "background events", 100, 1, 1.1);
   phiosbhist->SetStats(0);
   phiosbhist->SetLineColor(kRed);
   phisubhist = new TH1D("phisubhist", "background subtracted", 100, 1, 1.1);
   phisubhist->SetStats(0);
   phisubhist->SetLineColor(kGreen);






}


void Dsp_Background::SlaveBegin(TTree * ) {}


Bool_t Dsp_Background::Process(Long64_t entry)
{
 fReader.SetLocalEntry(entry);//do NOT delete this line, otherwise the program will crash
  GetEntry(entry);
  //********************LOOP SECTION***************


   TLorentzVector kpLV(*Kplus_PX, *Kplus_PY, *Kplus_PZ, *Kplus_PE);
   TLorentzVector kmLV(*Kminus_PX, *Kminus_PY, *Kminus_PZ, *Kminus_PE);
   //initializing the Lorentz Vector for pairing
   TLorentzVector kpkmLV(kpLV + kmLV);
   //calculating invariant mass pair
   double_t mkpkm = kpkmLV.Mag2()/1000000;

   //signal region
  if (*D_splus_M > 1958 && *D_splus_M < 1980) {
    mdspsig->Fill(*D_splus_M);
 phisighist->Fill(mkpkm);
  };
  //upper outer side band
  if (*D_splus_M < 1940 && *D_splus_M > 1918) {
    mdsposb->Fill(*D_splus_M);
  };
  //lower outer sideband
  if (*D_splus_M < 2020 && *D_splus_M > 1998) {
    mdsposb->Fill(*D_splus_M);
  };
  //outer side band
  if ((*D_splus_M < 1840 && *D_splus_M > 1818) || (*D_splus_M < 1920 && *D_splus_M > 1898)) {
    phiosbhist->Fill(mkpkm);
  }
  //inner side band00
  if ((*D_splus_M < 1959 && *D_splus_M > 1939) || (*D_splus_M > 1979 && *D_splus_M < 1999)) {
    mdspisb->Fill(*D_splus_M);
  };





   return kTRUE;
}

void Dsp_Background::SlaveTerminate() {}

void Dsp_Background::Terminate()
{
  //*******************WRAP UP******************
  //~~~~~~~~~~~~mdp~~~~~~~~~~~~~~~~~~~~~~
   auto c0 = new TCanvas("c0","c0",1600,1200);
auto mdsplegend = new TLegend(0.15,0.7,0.38,0.9);

mdspsig->Draw();
 mdsposb->Draw("same");
 mdspisb->Draw("same");

 mdsplegend->SetHeader("Regions","C"); // "c" centers header
   mdsplegend->AddEntry(mdspsig,"Signal Region","f");
   mdsplegend->AddEntry(mdspisb,"Inner Sideband","f");
   mdsplegend->AddEntry(mdsposb,"Outer Sideband","f");
   mdsplegend->Draw();
  c0->SaveAs("image/dsp_mdsp.png");




  //~~~~~~~~~~~~~~~~~ phi 1020 ~~~~~~~~~~~~~~~~
auto phican = new TCanvas("phican","phican",1700,1200);
auto philegend = new TLegend(0.55,0.7,0.85,0.9);


 phiosbhist->Add(phiosbhist, -0.5);
 phisubhist->Add(phisighist, phiosbhist, 1, -1);
 phisighist->Draw("e0 9");
 phiosbhist->Draw("e0same 9");
 phisubhist->Draw("e0same 9");
 phican->Update();
 phiratio = (TH1D*)phisighist->Clone();
 phiratio->SetName("phiratio");
   phiratio->SetStats(0);
   phiratio->SetLineColor(kViolet);
 phiratio->Divide(phiosbhist);
 float_t rightmax = 1.1*phiratio->GetMaximum();
 float_t scale = gPad->GetUymax()/rightmax;
 phiratio->Scale(scale);
 phiratio->Draw("hist L 9 same");


  philegend->SetHeader("Distributions","C");
  philegend->AddEntry(phisighist, "Signal m^{2}(K^{+}K^{-})", "l");
  philegend->AddEntry(phiosbhist, "Background m^{2}(K^{+}K^{-})", "l");
  philegend->AddEntry(phisubhist, "Background Subtracted m^{2}(K^{+}K^{-}) ", "l");
  philegend->AddEntry(phiratio, "Signal/Background Ratio", "l");
  philegend->Draw();


  auto axis = new TGaxis(gPad->GetUxmax(),gPad->GetUymin(), 
			   gPad->GetUxmax(),gPad->GetUymax(),
			   0, rightmax, 510, "+L");
  axis->SetLineColor(kViolet);
  axis->SetLabelColor(kViolet);
  axis->Draw();

  phican->SaveAs("image/dsp_phicut_bsub.png");
}
